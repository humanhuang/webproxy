#!/usr/bin/env node

require('colorful').colorful();
var program = require('commander');
var log = require('spm-log');
var doc = require('../lib/doc');
var readJSON = require('fs-extra').readJSONSync;
var exists = require('fs').existsSync;

program.usage('[options]');

program
  .option('-r, --registry <url>', 'registry url of yuan server')
  .option('-p, --port <port>', 'local server port, default: 8000')
  .option('-f, --force', 'force build without cache')
  .option('-v, --verbose', 'show more logging')
  .option('-q, --quiet', 'show less logging')
  .option('--no-color', 'disable colorful print')
  .option('clean', 'clean _site folder')
  .option('build', 'build documentation')
  .option('watch', 'start a server of watching source')
  .option('publish', 'publish documentation for public');

program.on('--help', function() {
  console.log('  Examples:'.to.bold.blue.color);
  console.log();
  console.log('    $', 'spm doc'.to.magenta.color + ' // alias of spm doc watch');
  console.log('    $', 'spm doc'.to.magenta.color, 'clean');
  console.log('    $', 'spm doc'.to.magenta.color, 'build');
  console.log('    $', 'spm doc'.to.magenta.color, 'build -f');
  console.log('    $', 'spm doc'.to.magenta.color, 'watch');
  console.log('    $', 'spm doc'.to.magenta.color, 'watch --port 8080');
  console.log('    $', 'spm doc'.to.magenta.color, 'publish');
  console.log('    $', 'spm doc'.to.magenta.color, 'publish -r http://spm.alipay.im');
  console.log();
});

program.parse(process.argv);

log.config(program);

if (!process.argv[2]) {
  program.watch = true;
}

var pkg = exists('package.json') && readJSON('package.json');
if (!pkg || !pkg.spm) {
  console.log();
  log.error('miss', 'package.json or "spm" key');
  process.exit(2);
}

console.log();
doc(program);
console.log();
