{
  "name": "ali.gnode",
  "version": "0.1.1",
  "description": "Run node with ES6 Generators, today!",
  "main": "index.js",
  "bin": {
    "ali.gnode": "bin/gnode"
  },
  "scripts": {
    "test": "node test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/gnode.git"
  },
  "keywords": [
    "node",
    "generators",
    "es6",
    "facebook",
    "regenerator",
    "co"
  ],
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://n8.io/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/gnode/issues"
  },
  "dependencies": {
    "regenerator2": "~0.6.3"
  },
  "devDependencies": {
    "co": "~2.1.0",
    "mocha": "~1.13.0",
    "semver": "~2.2.1",
    "suspend": "~0.3.0"
  },
  "readme": "gnode\n=====\n### Run node with ES6 Generators, today!\n[![Build Status](https://travis-ci.org/TooTallNate/gnode.png?branch=master)](https://travis-ci.org/TooTallNate/gnode)\n\n`gnode` is a very light wrapper around your `node` executable that ensures\n[ES6 Generator][generators] support, even on versions of node that do not\nsupport ES6 Generators natively.\n\nYou use it exactly like the regular `node` executable, except that you _do not_\nneed to pass the `--harmony-generators` flag. That is where the magic happens.\n\nWith `gnode` you can use [`co`][co] or [`suspend`][suspend], or any other\nGenerator-based flow control based module, today!\n\n\nHow does this magic work?\n-------------------------\n\n#### node &lt; 0.11.3\n\nWhen V8 provides no native ES6 generators support, then `gnode` invokes a node\ninstance with a patched `require.extensions['.js']` function, which transparently\ntranspiles your ES6 code with Generators into ES5-compatible code. We can thank\n[`facebook/regenerator`][regenerator] for making this possible.\n\nUnder the hood, this command:\n\n``` bash\n$ gnode foo.js all the args\n```\n\nTurns into something like this:\n\n``` bash\n$ GNODE_ENTRY_POINT=foo.js node fallback.js all the args\n```\n\n#### node &gt;= 0.11.3\n\nWhen V8 supports ES6 generators natively, then `gnode` invokes a node instance\nwith the `--harmony-generators` flag passed in transparently, so that the native\ngenerators are used, and no transpiling takes place. Everything else _just works_\nas you would expect it to.\n\nUnder the hood, this command:\n\n``` bash\n$ gnode foo.js all the args\n```\n\nTurns into something like this:\n\n``` bash\n$ node --harmony-generators foo.js all the args\n```\n\n\nInstallation\n------------\n\nInstall the `gnode` executable via npm:\n\n``` bash\n$ npm install -g gnode\n```\n\n\nCLI Examples\n------------\n\nThe `gnode` executable uses whatever version of node is installed in your `PATH`:\n\nHere's our example `t.js` file:\n\n``` js\nvar co = require('co');\n\nfunction sleep (ms) {\n  return function (fn) {\n    setTimeout(fn, ms);\n  };\n}\n\nco(function* () {\n  for (var i = 0; i < 5; i++) {\n    console.log(i);\n    yield sleep(1000);\n  }\n})();\n```\n\nThis script with an ES6 Generator in it can be run using any version of node\nby using `gnode`:\n\n``` bash\n☮ ~ (master) ∴ n 0.8.26\n\n☮ ~ (master) ∴ gnode -v\nv0.8.26\n\n☮ ~ (master) ∴ gnode t.js\n0\n1\n2\n3\n4\n\n☮ ~ (master) ∴ n 0.10.21\n\n☮ ~ (master) ∴ gnode -v\nv0.10.21\n\n☮ ~ (master) ∴ gnode t.js\n0\n1\n2\n3\n4\n\n☮ ~ (master) ∴ n 0.11.8\n\n☮ ~ (master) ∴ gnode -v\nv0.11.8\n\n☮ ~ (master) ∴ gnode t.js\n0\n1\n2\n3\n4\n```\n\n\nProgrammatic API\n----------------\n\nYou can also just `require('gnode')` in a script _without any generators_, and\nthen `require()` any other .js file that has generators after that.\n\n``` js\nrequire('gnode');\nvar gen = require('./someGenerator');\n// etc…\n```\n\n[co]: https://github.com/visionmedia/co\n[suspend]: https://github.com/jmar777/suspend\n[generators]: http://wiki.ecmascript.org/doku.php?id=harmony:generators\n[regenerator]: https://github.com/facebook/regenerator\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/TooTallNate/gnode",
  "_id": "ali.gnode@0.1.1",
  "_from": "ali.gnode@~0.1.1"
}
