#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var os = require('os');
var commander = require('commander');
var color = require('colorful').color;
var spawn = require('win-spawn');

commander.helpInformation = function() {
  return [
    '',
    color.bold('  Nico'),
    '',
    '  Usage: ' + this._name + ' ' + this.usage(),
    '' + this.commandHelp(),
    color.magenta('  Options:'),
    '',
    '' + this.optionHelp().replace(/^/gm, '    '),
    '',
    ''
  ].join('\n');
};

commander
  .version(require('../package').version)
  .usage('<command> [options]');


// sub command help
commander.on('--help', function() {
  console.log(color.cyan('  Commands:'));
  console.log();
  console.log('    build          build your site');
  console.log('    server         start a server');
  console.log('    help           show this menu');
  console.log();
});

commander.parse(process.argv);

var args = process.argv.slice(3);
var subcmd = commander.args[0];

if (!subcmd) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help');
  process.exit();
}

if (subcmd === 'help') {
  var helpcmd = commander.args[1];
  if (!helpcmd) {
    process.stdout.write(commander.helpInformation());
    commander.emit('--help');
    process.exit();
  }

  var bin = executable(helpcmd);
  if (bin) {
    spawn(bin, ['--help'], {stdio: 'inherit', customFds: [0, 1, 2]});
  }
} else {
  bin = executable(subcmd);
  if (bin) {
    spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]});
  }
}


// helpers
// ----------
function executable(subcmd) {
  var bin = 'nico-' + subcmd;

  var local = path.join(__dirname, bin);
  if (fs.existsSync(local)) {
    return local;
  }
  return null;
}
