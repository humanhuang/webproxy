{
  "name": "strip-comments",
  "description": "Strip comments from code. Remove both line comments and block comments.",
  "version": "0.2.0",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/mocha/bin/mocha"
  },
  "homepage": "https://github.com/jonschlinkert/strip-comments",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/strip-comments.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/strip-comments/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/strip-comments/blob/master/LICENSE-MIT"
    }
  ],
  "devDependencies": {
    "should": "~4.0.4",
    "mocha": "~1.20.1"
  },
  "keywords": [
    "comment",
    "comments",
    "remove",
    "remove comments",
    "strip comment",
    "strip comments",
    "strip",
    "block comments",
    "line comments",
    "strip block comments",
    "strip line comments"
  ],
  "readme": "# strip-comments [![NPM version](https://badge.fury.io/js/strip-comments.svg)](http://badge.fury.io/js/strip-comments)\n\n> Strip comments from code. Remove both line comments and block comments.\n\nShould work with any language that uses the same syntax, e.g. JavaScript, LESS, SASS/SCSS, CSS.\n\n## Install\n\n### [npm](npmjs.org)\n\n```bash\n npm i strip-comments --save\n ```\n\n### [bower](https://github.com/bower/bower)\n\n```bash\n npm install strip-comments --save\n ```\n\n## API\n### Table of contents\n- [strip](#stripstr-opts)\n- [strip.block()](#stripblockstr-opts)\n- [strip.line()](#striplinestr-opts)\n\n### strip(str[, opts])\nStrip all comments\n\n- `str` **{String}** file content or string to strip to\n- `opts` **{Object}** options are passed to `.block`, and `.line`\n- `return` **{String}**\n\n**Example:**\n\n```js\n/*!\n * this multiline\n * block comment ('top banner')\n */\n\n'use strict';\n\n/**!\n * and this multiline\n * block comment\n */\nvar foo = function(/* and these single-line block comments */) {};\n\n/**\n * and this multiline\n * block comment\n */\nvar bar = function(/* and these single-line block comments */) {};\n\n// this single-line line comment\nvar baz = function () {\n  // this multiline\n  // line comment\n  var some = true;\n  //this\n  var fafa = true; //and this\n  // var also = 'that';\n  var but = 'not'; //! that comment\n};\n\n// also this multiline\n// line comment\nvar fun = false;\n```\n\n**Source:**\n\n```js\nvar strip = module.exports = function(str, opts) {\n  return str ? strip.block(strip.line(str, opts), opts) : '';\n};\n```\n\n### strip.block(str[, opts])\nStrip only block comments\n\n- `str` **{String}** file content or string to strip to\n- `opts` **{Object}** if `safe:true`, strip only that not starts with `/*!` or `/**!`\n- `return` **{String}**\n\n**Example:**\n\n```js\n/**\n * this multiline\n * block comment\n */\nvar bar = function(/* and these single-line block comment */) {\n  /**\n   * also that comment\n   */\n  var str = 'something'\n};\n```\n\n**Source:**\n\n```js\nstrip.block = function(str, opts) {\n  opts = opts || {};\n  var re = new RegExp(reBlock + reBlockEnd, 'gm');\n  if(opts.safe) {\n    re = new RegExp(reBlockIgnore + reBlockEnd, 'gm');\n  }\n  return str ? str.replace(re, '') : '';\n};\n```\n\n### strip.line(str[, opts])\nStrip only line comments\n\n- `str` **{String}** file content or string to strip to\n- `opts` **{Object}** if `safe:true`, strip all that not starts with `//!`\n- `return` **{String}**\n\n**Example:**\n\n```js\n// this single-line line comment\nvar baz = function () {\n  // this multiline\n  // line comment\n  var some = true;\n  //this\n  var fafa = true; //and this\n  // var also = 'that';\n  var but = 'not'; //! that comment\n};\n```\n\n**Source:**\n\n```js\nstrip.line = function(str, opts) {\n  opts = opts || {};\n  var re = new RegExp(reLine, 'gm');\n  if(opts.safe) {\n    re = new RegExp(reLineIgnore, 'gm');\n  }\n  return str ? str.replace(re, '') : '';\n};\n```\n\n\n## Tests\n\n```bash\nmocha -R spec\n```\n\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.\nReleased under the MIT license",
  "readmeFilename": "README.md",
  "_id": "strip-comments@0.2.0",
  "_from": "strip-comments@~0.2.0"
}
